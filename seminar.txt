JPA andmebaasi ühendumine Spring Boot veebirakenduse juures

JPA - Java Persistence Api on standardne tehnoloogia, mis võimaldab kaardistada java objekte relatsioonandmebaasiga

On võimalik ehitada Gradle, Maven, IDE

JPA arenes välja muu mõtteprotsessi tulemusena

Mappingu osad on üksused, atribuudid ja suhted. Sellist mappingut kutsutakse ka ORM-iks (Object Relational Mapping)
JPA võimaldab kaardistada aplikatsiooni klassid tabelitega andmebaasis
Entity Manager: kui mappingud on defineeritud, siis Entity Manager saab hallata üksusi
JPQL (Java Persistence Query Language): võimaldab kirjutada päringuid üksuste otsimise teostamiseks. 
Oluline on mõista, et need erinevad SQL-päringutest. JPQL-päringud mõistavad juba mappinguid, mis on üksuste vahel defineeritud.

Näide JPA mappingust:
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
@Entity
@Table(name = "Task")
public class Task {
 @Id
 @GeneratedValue
 private int id;
 @Column(name = "description")
 private String desc;
 @Column(name = "target_date")
 private Date targetDate;
 @Column(name = "is_done")
 private boolean isDone;
}
CREATE TABLE task 
  ( 
     id          INTEGER GENERATED BY DEFAULT AS IDENTITY, 
     description VARCHAR(255), 
     is_done     BOOLEAN, 
     target_date TIMESTAMP, 
     PRIMARY KEY (id) 
  )
  
Spring Data JPA keskendub JPA kasutamisele andmete säilitamiseks relatsioonandmebaasis
